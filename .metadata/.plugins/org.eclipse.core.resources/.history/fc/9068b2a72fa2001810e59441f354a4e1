package model;

import java.sql.Date;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.stream.Collectors;

import org.json.JSONObject;

import dao.DAOFactory;
import pojo.Commentaire;
import serviceWeb.ServiceWeb;

public class CommentaireModele {
	
	
	public ArrayList<Commentaire> getList(){
		return new DAOFactory().getCommentaireDAO().getList();
	}
	public boolean ajouterComm(Commentaire comm) {
		System.out.println(" je suis dans model commentaire :  "+comm.getTexte()); 
		 String reponse = ServiceWeb.getService()
			   		.path("commentaire/ajout")
			   		.queryParam("idArticle",comm.getArticle().getID()+"")
			   		.queryParam("idUtilisateur",comm.getUtilisateur().getIdUtilisateur()+"")
			   		.queryParam("texte",comm.getTexte())
			   		//.queryParam("dateCommentaire",comm.getDateCommentaire().toString())
					.post(String.class);
		 System.out.println(" je suis a la fin de modele comm  "); 
		 return reponse.equals("OK");
	}
	public boolean supprimerComm(Commentaire comm) {
		 String reponse = ServiceWeb.getService()
			   		.path("commentaire/supprimer")
			   		.queryParam("texte",comm.getTexte())
			   		.queryParam("dateCommentaire",comm.getDateCommentaire().toString())
					.delete(String.class);
		return reponse.equals("OK");
	}
	
	public boolean modifier(Commentaire comm) {
		String reponse = ServiceWeb.getService()
		   		.path("commentaire/modifier")
		   		.queryParam("id",comm.getID()+"")
		   		.queryParam("texte",comm.getTexte())
		   		.queryParam("dateCommentaire",comm.getDateCommentaire().toString())
				.put(String.class);
		return reponse.equals("OK");	
	}
	public ArrayList<Commentaire> getListCommentaire(String nomArticle, String nomSousCategorie, String dateArticle) {
		System.out.println("je suis dans Commentaire model"+dateArticle+"article : "+nomArticle + " "+nomSousCategorie);
		ArrayList<Commentaire> listCommentaire = new ArrayList<Commentaire>();
				for(Commentaire comm :  this.getList()) {
					System.out.println(comm.getArticle().getTitre()+"   "+ comm.getArticle().getSousCategorie().getTitre()+"    "+comm.getTexte());
					if(comm.getArticle().getTitre().compareTo(nomArticle)==0
							&& comm.getArticle().getSousCategorie().getTitre().compareTo(nomSousCategorie)==0
							){
						listCommentaire.add(comm);
					}
				}
				/*.stream() && comm.getArticle().getDateArticle().equals(dateArticle)
				.filter(x -> x.getArticle().getTitre().equals(nomArticle) 
						&& x.getArticle().getSousCategorie().getTitre().equals(nomSousCategorie)
						&& x.getArticle().getDateArticle().equals(dateArticle))
				.collect(Collectors.toCollection(ArrayList::new))*/;	
		return listCommentaire;
	}
	public void getComm(){
		String reponse = ServiceWeb.getService()
		   		.path("commentaire/listCommentaire")
				.get(String.class);
		//JSONObject jsonObject = new JSONObject(reponse);
		//JSONArray array = new JSONArray(reponse);
		StringBuffer buffer = new StringBuffer(reponse);
		buffer.setCharAt(0, '{');
		buffer.setCharAt(buffer.length()-1, '}');
		/* for (Iterator iterator = jsonObject.keys(); iterator.hasNext();) {
			Commentaire o =(Commentaire) iterator.next();
			System.out.println(o.texte);	 
		 }*/
		reponse=buffer.toString();
		JSONObject jsonObject = new JSONObject(reponse);
		for (Iterator iterator = jsonObject.keys(); iterator.hasNext();) {
			Commentaire o =(Commentaire) iterator.next();
			//System.out.println(o.texte);	 
		 }
	}
}
